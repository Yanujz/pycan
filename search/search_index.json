{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"pycan","text":"<p>A Python module for implementing a UDS (Unified Diagnostic Services) + ISO-TP (ISO 15765-2) stack for automotive diagnostics.</p>"},{"location":"index.html#installation","title":"Installation","text":"<p>You can install the module using <code>pip</code>:</p> <pre><code>pip install pycan\n</code></pre>"},{"location":"index.html#usage","title":"Usage","text":"example.py<pre><code>from pycan import ISOTP, UDS\n\ndef bytearray2hex(d):\n    return \" \".join(\"{:02X}\".format(x) for x in d)\n\ndef recv(id):\n    ret = None\n\n    # Peripheral logic here\n\n    return ret\n\ndef send(id, extended, fd, data):\n    print(\"CAN TX    {:02X}|{}|{}|{}\".format(id,\n                                             \"EXT\" if extended else \"NOEXT\",\n                                             \"FD\" if fd else \"NOFD\",\n                                             bytearray2hex(data)))\n    # Peripheral logic here\n\n    return len(data)\n\ndef main():\n    isotp = ISOTP(recv=recv,\n                  send=send, \n                  fd=True)\n\n    uds = UDS(rxid=0x718,       # Default configuration (can be changed on each function if supported)\n              txid=0x710,       # Default configuration (can be changed on each function if supported)\n              extended=False,   # Default configuration (can be changed on each function if supported) \n              recv=isotp.recv,  # Select here the lower layer in the stack\n              send=isotp.send,  # Select here the lower layer in the stack\n              fd=True)          # Default configuration (can be changed on each function if supported)\n\n    print('Start routine')\n    ret, data = uds.routineStart(0xaabb)\n\u203a    if ret:\n        print(\"Positive response with value: {}\".format(bytearray2hex(data)))\n\n    print('Stop routine')\n    ret, data = uds.routineStop(0xaabb)\n    if ret:\n        print(\"Positive response with value: {}\".format(bytearray2hex(data)))\n\n    print('Results routine')\n    ret, data = uds.routineResult(0xaabb)\n    if ret:\n        print(\"Positive response with value: {}\".format(bytearray2hex(data)))\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"index.html#roadmap","title":"Roadmap","text":""},{"location":"index.html#phase-1-initial-setup","title":"Phase 1: Initial Setup","text":""},{"location":"index.html#step-1-project-structure","title":"Step 1: Project Structure","text":"<ul> <li> Create the initial project structure.     <pre><code>pycan/\n\u251c\u2500\u2500 pycan/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 pyisotp.py\n\u2502   \u251c\u2500\u2500 pyuds.py\n\u2502   \u2514\u2500\u2500 utility.py\n\u251c\u2500\u2500 setup.py\n\u2514\u2500\u2500 README.md\n</code></pre></li> </ul>"},{"location":"index.html#step-2-implement-can-interface","title":"Step 2: Implement CAN Interface","text":"<ul> <li> Write <code>can_interface.py</code> to handle basic CAN communication.</li> </ul>"},{"location":"index.html#step-3-implement-iso-tp-layer","title":"Step 3: Implement ISO-TP Layer","text":"<ul> <li> Write <code>pyisotp.py</code> to manage ISO-TP message fragmentation and reassembly.</li> </ul>"},{"location":"index.html#step-4-implement-uds-protocol","title":"Step 4: Implement UDS Protocol","text":"<ul> <li> Write <code>pyuds.py</code> to implement UDS over ISO-TP.</li> </ul>"},{"location":"index.html#step-5-create-setup-script","title":"Step 5: Create Setup Script","text":"<ul> <li> Write <code>setup.py</code> for module packaging and installation.</li> </ul>"},{"location":"index.html#step-6-write-readme","title":"Step 6: Write README","text":"<ul> <li> Create a comprehensive <code>README.md</code> with installation and usage instructions.</li> </ul>"},{"location":"index.html#phase-2-development-and-testing","title":"Phase 2: Development and Testing","text":""},{"location":"index.html#step-7-develop-core-features","title":"Step 7: Develop Core Features","text":"<ul> <li> (0x10) Diagnostic Session Control.</li> <li> (0x11) ECU Reset.<ul> <li> (0x0) Hard Reset</li> <li> (0x1) Key OffOn</li> <li> (0x2) Soft Reset</li> <li> (0x3) Enable Rapid Power Shutdown</li> </ul> </li> <li> (0x14) Clear Diagnostic Information.</li> <li> (0x19) Read DTCI nformation.</li> <li> (0x22) Read Data By Identifier.</li> <li> (0x23) Read Memory By Address.</li> <li> (0x24) Read Scaling Data By Identifier.</li> <li> (0x27) Security Access.</li> <li> (0x28) Communication Control.</li> <li> (0x29) Authentication.</li> <li> (0x2A) Read Data By Periodic Identifier.</li> <li> (0x2C) Dynamically Define Data Identifier.</li> <li> (0x2E) Write Data By Identifier.</li> <li> (0x2F) Input Output Control By Identifier.</li> <li> (0x31) RoutineControl.<ul> <li> (0x01) Start Routine</li> <li> (0x02) Stop Routine</li> <li> (0x03) Result Routine</li> </ul> </li> <li> (0x34) Request Download</li> <li> (0x35) Request Upload</li> <li> (0x36) Transfer Data</li> <li> (0x37) Request Transfer Exit</li> <li> (0x38) Request File Transfer</li> <li> (0x3D) Write Memory By Address</li> <li> (0x3E) Tester Present</li> <li> (0x84) SecuredDataTransmission</li> <li> (0x85) Control DTC Setting</li> <li> (0x86) ResponseOnEvent</li> <li> (0x87) LinkControl</li> </ul>"},{"location":"index.html#step-8-unit-testing","title":"Step 8: Unit Testing","text":"<ul> <li> Write unit tests for <code>pyisotp.py</code>.</li> <li> Write unit tests for <code>pyuds.py</code>.</li> </ul>"},{"location":"index.html#step-9-integration-testing","title":"Step 9: Integration Testing","text":"<ul> <li> Perform integration tests to ensure all components work together.</li> </ul>"},{"location":"iso14229/iso14229.html","title":"ISO 14229","text":""},{"location":"iso14229/iso14229.html#services","title":"Services","text":"Service ID (hex) Service Description 0x10 Diagnostic Session Control 0x11 ECU Reset 0x14 Clear Diagnostic Information 0x19 Read DTC Information 0x22 Read Data By Identifier 0x23 Read Memory By Address 0x27 Security Access 0x28 Communication Control 0x2A Read Data by Periodic ID 0x2E Write Data By Identifier 0x2F Input Output Control By Identifier 0x31 Routine Control 0x34 Request Download 0x35 Request Upload 0x36 Transfer Data 0x37 Transfer Exit 0x3D Write Memory By Address 0x3E Tester Present 0x85 Control DTC Setting"},{"location":"iso14229/iso14229.html#negative-response-code","title":"Negative Response Code","text":"Value Name Description 0x00 Positive response This response code shall not be used in a negative response message. This positiveResponse parameter value is reserved for server internal implementation. 0x01 - 0x0F ISOSAEReserved This range of values is reserved by this document for future definition. 0x10 General Reject This response code indicates that the requested action has been rejected by the server. The generalReject response code shall only be implemented in the server if none of the negative response codes defined in this document meet the needs of the implementation. At no means shall this response code be a general replacement for other response codes defined. 0x11 Service Not Supported This response code indicates that the requested action will not be taken because the server does not support the requested service. The server shall send this response code in case the client has sent a request message with a service identifier, which is either unknown or not supported by the server. Therefore this negative response code is not shown in the list of negative response codes to be supported for a diagnostic service, because this negative response code is not applicable for supported services. 0x12 Sub-Function Not Supported This response code indicates that the requested action will not be taken because the server does not support the service specific parameters of the request message. The server shall send this response code in case the client has sent a request message with a known and supported service identifier but with \"sub function\u201c which is either unknown or not supported. 0x13 Incorrect Message Length or Invalid Format This response code indicates that the requested action will not be taken because the length of the received request message does not match the prescribed length for the specified service or the format of the parameters do not match the prescribed format for the specified service. 0x14 Response Too Long This response code shall be reported by the server if the response to be generated exceeds the maximum number of bytes available by the underlying network layer. 0x15 - 0x20 ISOSAEReserved This range of values is reserved for future definition. 0x21 Busy Repeat Request This response code indicates that the server is temporarily too busy to perform the requested operation. In this circumstance the client shall perform repetition of the \"identical request message\" or \"another request message\". The repetition of the request shall be delayed by a time specified in the respective implementation documents. Example: In a multi-client environment the diagnostic request of one client might be blocked temporarily by a NRC $21 while a different client finishes a diagnostic task.NOTE If the server is able to perform the diagnostic task but needs additional time to finish the task and prepare the response, the NRC 0x78 shall be used instead of NRC 0x21.This response code is in general supported by each diagnostic service, as not otherwise stated in the data link specific implementation document, therefore it is not listed in the list of applicable response codes of the diagnostic services. 0x22 Conditions Not Correct This response code indicates that the requested action will not be taken because the server prerequisite conditions are not met. 0x23 ISOSAEReserved This range of values is reserved for future definition. 0x24 Request Sequence Error This response code indicates that the requested action will not be taken because the server expects a different sequence of request messages or message as sent by the client. This may occur when sequence sensitive requests are issued in the wrong order.Example: A successful SecurityAccess service specifies a sequence of requestSeed and sendKey as sub-functions in the request messages. If the sequence is sent different by the client the server shall send a negative response message with the negative response code 0x24 (requestSequenceError). 0x25 No Response from Subnet Component No response was received from a subnet component. 0x26 Failure Prevents Execution of Requested Action A failure prevents the execution of the requested action. 0x31 Request Out of Range This response code indicates that the requested action will not be taken because the server has detected that the request message contains a parameter which attempts to substitute a value beyond its range of authority (e.g. attempting to substitute a data byte of 111 when the data is only defined to 100), or which attempts to access a dataIdentifier/routineIdentifer that is not supported or not supported in active session. This response code shall be implemented for all services, which allow the client to read data, write data or adjust functions by data in the server. 0x32 ISOSAEReserved This range of values is reserved for future definition. 0x33 Security Access Denied This response code indicates that the requested action will not be taken because the server's security strategy has not been satisfied by the client. The server shall send this response code if one of the following cases occur:<ul><li>the test conditions of the server are not met.</li><li>the required message sequence e.g. DiagnosticSessionControl, securityAccess is not met.</li><li>the client has sent a request message which requires an unlocked server.</li></ul>Beside the mandatory use of this negative response code as specified in the applicable services within this standard, this negative response code can also be used for any case where security is required and is not yet granted to perform the required service. 0x34 ISOSAEReserved This range of values is reserved for future definition. 0x35 Invalid Key This response code indicates that the server has not given security access because the key sent by the client did not match with the key in the server's memory. This counts as an attempt to gain security. The server shall remain locked and increment its internal securityAccessFailed counter. 0x36 Exceed Number of Attempts This response code indicates that the requested action will not be taken because the client has unsuccessfully attempted to gain security access more times than the server's security strategy will allow. 0x37 Required Time Delay Not Expired This response code indicates that the requested action will not be taken because the client's latest attempt to gain security access was initiated before the server's required timeout period had elapsed. 0x3A Request Download Not Accepted The request to download data is not accepted by the server. 0x3B Improper Download Type The download type requested is not proper. 0x3C CAN Identifier Collision A collision occurred with the CAN identifier. 0x3D Invalid Data Transfer The data transfer requested is invalid. 0x43 General Programming Failure A general failure occurred during programming. 0x44 Wrong Block Sequence Counter The block sequence counter is incorrect. 0x45 Illegal Address in Block Transfer An illegal address was specified in the block transfer. 0x71 Transfer Suspended The transfer of data has been suspended. 0x72 Transfer Aborted The transfer of data has been aborted. 0x73 Transfer Cancelled The transfer of data has been cancelled. 0x7E Sub-Function Not Supported in Active Session This response code indicates that the requested action will not be taken because the server does not support the requested sub-function in the session currently active. Within the programmingSession negative response code 0x12 (subFunctionNotSupported) may optionally be reported instead of negative response code 0x7F (subFunctionNotSupportedInActiveSession). This response code shall only be used when the requested sub-function is known to be supported in another session, otherwise response code 0x12 (subFunctionNotSupported) shall be used. This response code shall be supported by each diagnostic service with a sub-function parameter, if not otherwise stated in the data link specific implementation document, therefore it is not listed in the list of applicable response codes of the diagnostic services. 0x7F Service Not Supported in Active Session This response code indicates that the requested action will not be taken because the server does not support the requested service in the session currently active. This response code shall only be used when the requested service is known to be supported in another session, otherwise response code 0x11 (serviceNotSupported) shall be used. This response code is in general supported by each diagnostic service, as not otherwise stated in the data link specific implementation document, therefore it is not listed in the list of applicable response codes of the diagnostic services. 0x81 RpmTooHigh This response code indicates that the requested action will not be taken because the server prerequisite condition for RPM is not met (current RPM is above a pre-programmed maximum threshold)."},{"location":"iso14229/iso14229.html#diagnostic-session-control-0x10","title":"Diagnostic Session Control (0x10)","text":"<p>The Diagnostic Session Control service (0x10) facilitates the management of diagnostic sessions between a control device (tester) and a vehicle's control module or control system. This service is essential within diagnostic communication standards such as ISO 14229 (Unified Diagnostic Services, UDS).</p> <p>Common subfunctions:</p> <ul> <li> <p>Default Session (0x01): This default session is used for routine operations and general access to the diagnostic system without specific restrictions.</p> </li> <li> <p>Programming Session (0x02): This session is used to activate programming modes, enabling access to programming and software update functions.</p> </li> <li> <p>Extended Diagnostic Session (0x03): This extended session provides advanced diagnostic capabilities that may not be available in standard sessions, such as access to more detailed parameters or advanced diagnostic functions.</p> </li> <li> <p>System Safety Diagnostic Session (0x04): This session is dedicated to diagnosing safety systems, ensuring their proper operation and diagnostics.</p> </li> </ul>"},{"location":"iso14229/iso14229.html#request-example","title":"Request example:","text":"<pre><code>   -------------------------------------&gt; PCI (CAN-TP Single frame).\n  /     --------------------------------&gt; SID (Service Identifier)\n |     /     ---------------------------&gt; SBF (Sub Function) -&gt; Default Session (0x01)\n |    |     /     ----------------------&gt; Unused \n |    |    |     /     -----------------&gt; Unused\n |    |    |    |     /     ------------&gt; Unused\n |    |    |    |    |     /     -------&gt; Unused\n |    |    |    |    |    |     /     --&gt; Unused\n |    |    |    |    |    |    |     /\n |    |    |    |    |    |    |    |     \n0x02 0x10 0x01 0x00 0x00 0x00 0x00 0x00 \n</code></pre>"},{"location":"iso14229/iso14229.html#positive-response","title":"Positive Response","text":"<pre><code>   -------------------------------------&gt; PCI (CAN-TP Single frame).\n  /     --------------------------------&gt; SID (Request SID + 0x40)\n |     /     ---------------------------&gt; SFID (Sub Function ID) -&gt; Default Session (0x01)\n |    |     /     ----------------------&gt; P2_0 Server timing parameter MSB\n |    |    |     /     -----------------&gt; P2_0 Server timing parameter LSB\n |    |    |    |     /     ------------&gt; P2_1 Server timing parameter MSB\n |    |    |    |    |     /     -------&gt; P2_1 Server timing parameter LSB\n |    |    |    |    |    |     /     --&gt; Unused\n |    |    |    |    |    |    |     /   \n |    |    |    |    |    |    |    |         \n0x06 0x50 0x01 0x00 0x19 0x07 0xD0 0x00\n</code></pre>"},{"location":"iso14229/iso14229.html#negative-response","title":"Negative Response","text":"<pre><code>   -------------------------------------&gt; PCI (CAN-TP Single frame).\n  /     --------------------------------&gt; SID (Negative response)\n |     /     ---------------------------&gt; SID (Request SID)\n |    |     /     ----------------------&gt; Reason (Check Negative response code)\n |    |    |     /     -----------------&gt; Unused\n |    |    |    |     /     ------------&gt; Unused\n |    |    |    |    |     /     -------&gt; Unused\n |    |    |    |    |    |     /     --&gt; Unused\n |    |    |    |    |    |    |     /   \n |    |    |    |    |    |    |    |         \n0x03 0x7F 0x10 0x12 0x0 0x00 0x00 0x00\n</code></pre>"},{"location":"iso14229/iso14229.html#ecu-reset-service-identifier-0x11","title":"ECU Reset Service Identifier (0x11)","text":""},{"location":"iso14229/iso14229.html#request-example_1","title":"Request example:","text":"<pre><code>   -------------------------------------&gt; PCI (CAN-TP Single frame).\n  /     --------------------------------&gt; SID (Service Identifier)\n |     /     ---------------------------&gt; SBF (Sub Function)\n |    |     /     ----------------------&gt; Unused \n |    |    |     /     -----------------&gt; Unused\n |    |    |    |     /     ------------&gt; Unused\n |    |    |    |    |     /     -------&gt; Unused\n |    |    |    |    |    |     /     --&gt; Unused\n |    |    |    |    |    |    |     /\n |    |    |    |    |    |    |    |     \n0x02 0x11 0xXX 0x00 0x00 0x00 0x00 0x00 \n</code></pre>"},{"location":"iso14229/iso14229.html#tester-present-0x3e","title":"Tester present (0x3E)","text":"<p>The purpose of this service is to indicate to a server (or servers) that a client is still connected to the vehicle. It ensures that certain diagnostic services and/or communications, previously activated, remain active. To keep one or multiple servers in a diagnostic session other than the default Session. ServicesKeeps communication is alive: avoid communication timeout. There is no Subfunction parameter like other services.</p>"},{"location":"iso14229/iso14229.html#request-example_2","title":"Request example:","text":"<pre><code>   -------------------------------------&gt; PCI (CAN-TP).\n  /     --------------------------------&gt; SID (Service Identifier)\n |     /     ---------------------------&gt; SBF (Sub Function) Can be anything\n |    |     /     ----------------------&gt; Unused \n |    |    |     /     -----------------&gt; Unused\n |    |    |    |     /     ------------&gt; Unused\n |    |    |    |    |     /     -------&gt; Unused\n |    |    |    |    |    |     /     --&gt; Unused\n |    |    |    |    |    |    |     /\n |    |    |    |    |    |    |    |     \n0x02 0x3E 0x00 0x00 0x00 0x00 0x00 0x00 \n</code></pre>"},{"location":"iso14229/iso14229.html#positive-response_1","title":"Positive Response","text":"<pre><code>   -------------------------------------&gt; PCI (CAN-TP Single frame).\n  /     --------------------------------&gt; SID (Request SID + 0x40)\n |     /     ---------------------------&gt; SFID (Sub Function ID - Usually 0x00) \n |    |     /     ----------------------&gt; Unused\n |    |    |     /     -----------------&gt; Unused\n |    |    |    |     /     ------------&gt; Unused\n |    |    |    |    |     /     -------&gt; Unused\n |    |    |    |    |    |     /     --&gt; Unused\n |    |    |    |    |    |    |     /   \n |    |    |    |    |    |    |    |         \n0x02 0x7E 0x00 0x00 0x00 0x00 0x00 0x00\n</code></pre>"},{"location":"iso15765-2/iso15765-2.html","title":"ISO 15765-2","text":""}]}